import { Injectable } from '@angular/core';
import { LogEntry } from './LogEntry';

@Injectable({
  providedIn: 'root',
})
export class BackendErrorCodes {

  constructor() { }

  backendCodes = [
    'INTERNAL_ERROR',
    'INTERNAL_SERVER_ERROR',
    'SQL_ERROR',
    'UNAUTHORIZED_ERROR',
    'ACCESS_DENIED',
    'INVALID_INPUT',
    'INVALID_PARAMS',
    'ORDER_LOCATION_NOT_PRESENT',
    'ORDER_CUSTOMER_INFO_NOT_PRESENT',
    'ORDER_WISH_TIME_INVALID',
    'ORDER_DELIVERY_METHOD_NOT_PRESENT',
    'ORDER_ADDRESS_DELIVERY_NOT_SUPPORTED',
    'ORDER_IN_STORE_LOCATION_DELIVERY_NOT_SUPPORTED',
    'ORDER_PICKUP_DELIVERY_NOT_SUPPORTED',
    'ORDER_DELIVERY_POSTCODE_NOT_SUPPORTED',
    'OUT_OF_STOCK',
    'OFFER_AVAILABILITY_SCHEDULE_ERROR',
    'OPENING_TIME_SCHEDULE_ERROR',
    'PROMOTION_NOT_ELIGIBLE',
    'STORE_SETTING_TABLES_NOT_PRESENT',
    'STORE_SETTING_POSTCODES_NOT_PRESENT',
    'STORE_SETTING_ORDER_EVENT_CONFIGS_NOT_PRESENT',
    'STORE_SETTING_INVALID_MIN_MAX_ESTIMATED_TIME',
    'STORE_SETTING_INVALID_GOOGLE_ANALYTICS_TRACKING_CODE',
    'STORE_SETTING_INVALID_FB_PIXEL_TRACKING_ID',
    'STORE_SETTING_EXTERNAL_DOMAIN_NOT_PRESENT',
    'STORE_SETTING_INVALID_DOMAIN',
    'STORE_SETTING_INVALID_SUBDOMAIN',
    'STORE_SETTING_INVALID_URL',
    'STORE_SETTING_INVALID_STORE_PROMOTE_URL',
    'INVALID_CUSTOMER_VOUCHER',
    'CUSTOMER_VOUCHER_ALREADY_PRESENT',
    'CUSTOMER_VOUCHER_ALREADY_CONSUMED',
    'CUSTOMER_VOUCHER_NOT_SUPPORTED',
    'STORE_SETTING_INVALID_SLOT_DURATION',
    'STORE_SETTING_INVALID_WISH_TIME_INTERVAL',
    'STORE_SETTING_INVALID_ORDER_PER_SLOT',
    'ORDER_PER_SLOT_LIMIT_REACHED',
    'STORE_SETTING_INVALID_MINIMUM_WISH_TIME_FUTURE',
    'ORDER_STORE_SAME_DAY_ORDERING_DISABLED',
    'ORDER_STORE_ZONE_SAME_DAY_ORDERING_DISABLED',
    'ORDER_STORE_CATALOG_CATEGORY_OFFER_SAME_DAY_ORDERING_DISABLED',
    'ZONE_AVAIABILITY_SCHEDULE_ERROR',
    'ADDRESS_DELIVERY_HOURS_SCHEDULE_ERROR',
    'PICKUP_HOURS_SCHEDULE_ERROR',
    'SERVING_HOURS_SCHEDULE_ERROR',
    'STORE_SETTING_INVALID_MAX_ITEMS_PER_SLOT',
    'ORDER_MINIMUM_AMOUNT_NOT_MET',
    'INVALID_SOCIAL_ACCOUNT',
    'UNREGITERED_SOCIAL_ACCOUNT',
    'STORE_NOT_FOUND',
    'LANGUAGE_NOT_FOUND',
    'CONTENT_ITEM_NOT_FOUND',
    'CATALOG_NOT_FOUND',
    'CATALOG_CATEGORY_NOT_FOUND',
    'AFFILIATE_NOT_FOUND',
    'ORDER_ITEM_NOT_FOUND',
    'ORDER_NOT_FOUND',
    'ORDER_EVENT_NOT_FOUND',
    'VERIFICATION_TOKEN_NOT_FOUND',
    'VERIFICATION_TOKEN_EXPIRED',
    'USER_NOT_FOUND',
    'CURRENCY_NOT_FOUND',
    'PURCHASE_NOT_FOUND',
    'AFFILIATE_ALREADY_PRESENT',
    'COUNTRY_NOT_FOUND',
    'VOUCHER_NOT_FOUND',
    'LOCATION_NOT_FOUND',
    'RULE_NOT_FOUND',
    'SCHEDULE_NOT_FOUND',
    'ZONE_NOT_FOUND',
    'ALIAS_TAKEN',
    'SUBSCRIBE_TO_CLAIM_ALIAS',
    'PAYMENT_ERROR',
    'ORDER_GPS_COORDINATES_NOT_PRESENT',
    'ORDER_STATUS_CHANGE_NOT_ALLOWED',
    'ORDER_UPDATE_NOT_ALLOWED',
    'REQUIRED_PROMOTIONS_NOT_APPLIED',
    'INVALID_STORE_RELATION',
    'ORDER_PAYMENT_INITIATION_NOT_ALLOWED',
    'PAYMENT_METHOD_NOT_SUPPORTED',
    'INCORRECT_INTEGRATION_DETAILS',
    'OVERLAPPING_ZONE_ERROR',
    'ZONES_PRESENT_WITH_OTHER_TYPE',
    'ORDER_DELIVERY_LOCATION_NOT_SUPPORTED',
    'card was declined',
    'Invalid email address',
    'Unknown Error',
    'ZONE_RESTRICTION_NOT_ALLOWED'
  ];

  isBackendHandledError(entry: LogEntry): boolean {
    const errorInfo: string = entry.buildLogString();
    return this.backendCodes.some(code => errorInfo.includes(code));
}
}
